name: Run plugin-cargo

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches: [ main, feat/*, fix/* ]

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info
  # database branch
  DATABASE: debug
  TAG_CACHE: cache-plugin-cargo-v0.1.4.redb
  BOT: 1
  OS_CHECKER_FORCE_PLUGIN_CARGO: true
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  # OS_CHECKER_CONFIGS: os-checker.json
  OS_CHECKER_CONFIGS: repos-default.json repos-ui.json

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy, miri

      - name: Set up miri
        run: cargo miri setup

      - name: Download cache
        run: gh release download -R os-checker/database ${{ env.TAG_CACHE }} -p ${{ env.TAG_CACHE }} || echo "${{ env.TAG_CACHE }} not found"

      - name: Fetch os-checker config JSONs
        run: |
          gh release download -R kern-crates/.github -p os-checker_config.json
          # temporarily disable qclic/e1000e-frame
          jq 'del(."qclic/e1000e-frame")' os-checker_config.json > repos-default.json
          wget https://raw.githubusercontent.com/os-checker/os-checker/refs/heads/main/assets/repos-ui.json

          # echo '{"os-checker/os-checker":{}}' > repos.json

      - name: Install cargo-nextest
        run: |
          wget https://github.com/nextest-rs/nextest/releases/download/cargo-nextest-0.9.81/cargo-nextest-0.9.81-x86_64-unknown-linux-gnu.tar.gz
          tar xzvf cargo-nextest-0.9.81-x86_64-unknown-linux-gnu.tar.gz
          mv cargo-nextest ~/.cargo/bin

      - name: Install os-checker
        run: |
          gh release download --clobber -R os-checker/database precompiled-checkers -p checkers.tar.xz
          tar -xvJf checkers.tar.xz -C ~/.cargo/bin/
          wget https://github.com/os-checker/database/releases/download/precompiled-checkers/os-checker -O ~/.cargo/bin/os-checker
          chmod +x ~/.cargo/bin/os-checker
          os-checker config --list-repos

      # - name: Test get_release_count
      #   run: cargo test -- test_get_release_count --nocapture
      #
      # - name: Test os-checker layout --list-targets
      #   run: cargo test -- test_sel4 --nocapture
      #
      # - name: Test pkg_targets
      #   run: cargo test -- test_pkg_targets --nocapture
      #
      # - name: Test get testcases
      #   run: cargo test -- test_get_testcases --include-ignored --nocapture

      - name: Install plugin-cargo
        run: cargo install --path .

      - name: Run plugin-cargo
        run: |
          os-checker-plugin-cargo #os-checker.json
          tree --gitignore -h cargo

      - name: Upload cache
        run: |
          gh release upload --clobber -R os-checker/database ${{ env.TAG_CACHE }} ${{ env.TAG_CACHE }}
          XZ_OPT=-e9 tar -cJvf ${{ env.TAG_CACHE }}.tar.xz ${{ env.TAG_CACHE }}
          ls -alh
          gh release upload --clobber -R os-checker/database ${{ env.TAG_CACHE }} ${{ env.TAG_CACHE }}.tar.xz

      - name: Push to database
        env:
          PLUGIN_PATH: plugin/cargo
        run: |
          git config --global user.name "zjp-CN[bot]"
          git config --global user.email "zjp-CN[bot]@users.noreply.github.com"

          echo "正在 clone os-checker/database"
          gh repo clone os-checker/database
          gh auth setup-git
          echo "成功 clone os-checker/database"

          cd database
          git switch ${{ env.DATABASE }}

          rm -rf ${{ env.PLUGIN_PATH }}
          mkdir -p ${{ env.PLUGIN_PATH }}
          mv ../cargo ${{ env.PLUGIN_PATH }}/info
          bash ../push.sh

